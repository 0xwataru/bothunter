# coding:utf-8
import socket
import time


def check(ip, port, timeout = 3):

    # port_list = [3460,80,443,8080,8000]
    # for port in ports:
    s1 = '\x50\x00\x00\x00\xd2\xb0\xbc\x2a\x49\xab\x83\x42\xa1\xba\x89\xf5\x3c\x76\xc8\xa8\x06\xd1\x4f\x49\xf4\x65\xd6\x5e\xb0\x54\x7a\xbd\xb5\x88\xb4\x97\x7b\x46\x91\xb4\x4d\x6b\x11\x02\x5b\x17\xee\x14\xce\xac\x65\x44\x1d\xf2\x73\xdd\x4d\x07\x36\xdb\x76\x2d\xe7\x7b\x3c\x05\xe1\x60\x0f\xb0\x0d\x57\x48\xc7\x94\x98\x8c\xad\xec\x14\x9a\x8a\xef\xe5'
    s2 = '\x20\x00\x00\x00\xbd\xa2\xc2\x87\x53\x02\xe0\xfd\x94\x94\x83\x6d\x6e\xf8\x68\x70\xfa\x42\x95\xc6\x02\x3a\x67\x65\x7f\xf2\x26\x4b\x19\x55\x25\xda'
    s3 = '\x08\x00\x00\x00\xc1\xc3\xd02CY\xa1x'
    s5 = '\x40\x00\x00\x00\x87\x68\x0b\x9c\x6f\x75\xd5\x1f\x0c\x30\xe1\x26\xee\x5f\xbb\xa8\x7c\x65\xfb\x1d\x10\x83\x4d\xbe\x97\x75\xef\x83\x34\x18\xd2\x0e\x4c\x12\xaa\x18\x75\x0a\xa6\x91\x2f\x3d\x60\xa6\x69\x64\x98\x76\x6d\x1e\xc8\xc2\x86\x25\x42\x39\x49\x41\xd7\x02\x89\x2d\x7b\x91'
    port = int(port)
    try:
        s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
        s.settimeout(timeout)
        s.connect((ip,port))
        s.send(s5)
        receive = s.recv(0x100)
        print receive.encode('hex')
        if len(receive) == 36 and receive.startswith('\x20\x00\x00\x00'):
            print 'NanoCore %s:%s' % (ip,port)
        elif len(receive) == 12 and receive.startswith('\x08\x00\x00\x00'):
            print 'NanoCore %s:%s' % (ip,port)
            s.close()
            return True
        s.close()
    except Exception as e:
        time.sleep(4)
        print 'timeout'
        s.close()
    return None

# fobj = open('NanoCore','r')
# for line in fobj:
#     line = line.strip()
#     ports = []
#     ip = line.split(':')[0]
#     ports.append(line.split(':')[1])
#     check(ip,ports,3)
